[I]> Lấy dữ liệu từ trên mạng về tại hai trang web:
	1. https://nha.chotot.com/
	2. https://phongtro123.com/

	Thu được 4 trường :thời gian, giá, diện tích, địa chỉ, chi tiết
	
[II]> Phân tích lấy trường dữ liệu cần thiết:
	Bằng biện pháp đánh giá, tham khảo 

	1. Giá phòng 
	
	
	2. Thời gian ??? (tháng/ năm) // phongtro123 : ngày cụ thể + nhachoto : ngày 1
	3. Diện tích 				  // OK 
	4. Địa chỉ  ???				  // NoOK -> tách ra làm đường, phường,xã - quận huyện

	
	5. Phòng khép kín hay không   // OK mặc định 1 (không khép kín)
	6. Ở tầng mấy (mặc định là tầng dưới cùng)// OK mặc định 1 : khép kín
	7. Có mấy tiện nghi	 	      // OK mặc định là 0. Tính theo thang điểm: cộng 1 nếu có :giường tủ , nóng lạnh , điều hòa ,tủ lạnh , máy giặt, tivi
	8. Có view hay không ??		  // 0K mặc định là 0. Tính theo thang điểm : gác xép, thang máy, ban công , chỗ để xe, camera , chấm vân tay 

	
[III]> Tách dữ liệu : [1 tuần]
 
[IV] > Xây dựng mô hình mạng neural -> tiến hành training [2 tuần]
	   Xây dựng mô hình hồi quy tuyến tính -> tiến hành đánh giá
	   
	   nếu mô hình ở trạng thái không chấp nhận được : Xây dựng lại mô hình 
	   1500 -> 80/20 . Test một vài mô hình -> mô hình tốt nhất
	   

[ V ]> Tiến hành đánh giá thay đổi mô hình > Nhằm nâng cao [1 tuần]

	- So sánh với chính  deep-learning với các mô hình khác nhau 
	- So sánh với hồi quy tuyến tính (dùng công cụ)
	
[ VI ]> Viết báo cáo, silde các tool hỗ trợ các quá trình trên [1 tuần]
		front_end : web

	Xây dựng tool hỗ trợ :tự động tải dữ liệu (spider) ,  
	
[VII]> tài liệu tham khảo :

https://towardsdatascience.com/house-prices-prediction-using-deep-learning-dea265cc3154
https://hackernoon.com/build-your-first-neural-network-to-predict-house-prices-with-keras-3fb0839680f4
https://hub.packtpub.com/top-5-deep-learning-architectures/
https://addepto.com/deep-learning-architecture/


https://towardsdatascience.com/multi-layer-neural-networks-with-sigmoid-function-deep-learning-for-rookies-2-bf464f09eb7f

Các khó khăn trong tách dữ liệu :
- Địa chỉ không đầy đủ .
- Thông tin đặc tính căn phòng không đầy đủ.
- Địa chỉ và chi tiết không trùng khớp

Tiền xử lý dữ liệu :

	If the distribution of the quantity is normal, then it should be standardized, otherwise the data should be normalized

Cơ chế lan truyền ngược:
	backpropagation, is mentioned in the last post. Remember that we iterated the importance of designing a neural network so that the network can learn 
	from the difference between the desired output (what the fact is) and actual output (what the network returns) and then send a signal back to the weights and ask the weights to adjust themselves? 
	This will make the network’s output closer to the desired output next time we run it.
	

Sự khác biệt giữa mô hình học máy thông thường với deep-learning:
	If the activation function is linear, then you can stack as many hidden layers in the neural network as you wish, 
	and the final output is still a linear combination of the original input data. Please make sure you read this link
	

MLP và DNN 
	MLP is a subset of DNN. While DNN can have loops and MLP are always feed-forward, i.e. A Multilayer Perceptron is a finite acyclic graph.
	
Normalization & Standardization
	Normalization is good to use when you know that the distribution of your data does not follow a Gaussian distribution. This can be useful in algorithms that do not assume any distribution of the data like K-Nearest Neighbors and Neural Networks.
	Standardization, on the other hand, can be helpful in cases where the data follows a Gaussian distribution. However, this does not have to be necessarily true. Also, unlike normalization, standardization does not have a bounding range. So, even if you have outliers in your data, they will not be affected by standardization.
	
https://www.datacamp.com/community/tutorials/machine-learning-models-api-python